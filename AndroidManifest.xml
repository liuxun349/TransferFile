<?xml version="1.0" encoding="utf-8"?>

<!--
Copyright 2009 David Revell

This file is part of SwiFTP.

SwiFTP is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

SwiFTP is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with SwiFTP.  If not, see <http://www.gnu.org/licenses/>.
-->


<!-- Declare the contents of this Android application.  The namespace
     attribute brings in the Android platform namespace, and the package
     supplies a unique name for the application.  When writing your
     own application, the package name must be changed from "com.example.*"
     to come from a domain that you own or have control over. -->
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    package="org.swiftp" android:versionCode="17" android:versionName="1.25">

    <!-- This package contains an application...  The 'label' is the name
         to display to the user for the overall application, and provides
         a default label for all following components.  The syntax here is a
         reference to one of our string resources.-->
    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE"></uses-permission>
    <application android:label="@string/swiftp_name" android:icon="@drawable/logo">

        <!-- An Activity in the application - this is something the user
             can launch and interact with.  The "name" attribute is the
             name of the class within your package that implements this
             activity. -->
        <activity android:name="ServerControlActivity">

            <!-- An IntentFilter tells the system when it should use your
                 activity.  This allows the user to get to your activity
                 without someone having to explicitly know to launch your
                 class "com.examplel.android.skeletonapp.SkeletonActivity". -->
            <intent-filter>
                <!-- The MAIN action describes a main entry point into an
                     activity, without any associated data. -->
                <action android:name="android.intent.action.MAIN" />

                <!-- This places this activity into the main app list. -->
                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>

        </activity>
        <activity android:name="ConfigureActivity" class=".ConfigureActivity" />
        <service android:name=".FTPServerService" />

      <!-- Widget actions are registered here -->
      <receiver android:name=".WidgetProvider" android:label="@string/widget_name">
          <intent-filter>
                <action android:name="android.appwidget.action.APPWIDGET_UPDATE" />
                <!-- WidgetProvider will process this broadcast -->
				<action android:name="org.swiftp.WidgetProvider.ACTION_WIDGET_BUTTON"/>
          </intent-filter>
          <meta-data android:name="android.appwidget.provider" android:resource="@xml/widget_provider" />
      </receiver>
      
      <!-- Widget actions are registered here -->
      <receiver android:name=".WidgetProvider" android:label="@string/widget_name">
          <intent-filter>
                <action android:name="android.appwidget.action.APPWIDGET_UPDATE" />
                <!-- WidgetProvider will process this broadcast -->
				<action android:name="org.swiftp.WidgetProvider.ACTION_WIDGET_BUTTON"/>
          </intent-filter>
          <meta-data android:name="android.appwidget.provider" android:resource="@xml/widget_provider" />
      </receiver>

<!--    <receiver-->
<!--    	android:label="@string/wifi_state_receiver_label" -->
<!--        android:name="org.swiftp.WifiStateReceiver" -->
<!--        android:enabled="true"-->
<!--        android:exported="true"-->
<!--        >-->
<!--	    <intent-filter>-->
<!--			<action android:name="android.net.wifi.WifiManager.STATE_CHANGE" />-->
<!--		</intent-filter>-->
<!--	</receiver>-->
</application>

<uses-permission android:name="android.permission.INTERNET"></uses-permission>
<uses-permission android:name="android.permission.ACCESS_WIFI_STATE"></uses-permission>
<uses-permission android:name="android.permission.READ_PHONE_STATE"></uses-permission>
<uses-permission android:name="android.permission.WAKE_LOCK"></uses-permission>

<uses-permission android:name="android.permission.CHANGE_WIFI_STATE"></uses-permission>
<uses-sdk android:minSdkVersion="4"></uses-sdk>

</manifest>
